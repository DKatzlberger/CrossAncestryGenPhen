[{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/articles/single_subset_run.html","id":"data-setup","dir":"Articles","previous_headings":"","what":"Data setup","title":"Single subset run","text":"example can see common scenario EUR ancestry larger sample size another (AFR).","code":"library(CrossAncestryGenPhen) library(ggplot2) #> Warning: package 'ggplot2' was built under R version 4.3.3  # Seed for reproducibility set.seed(42)  # Simulate example data p <- 100  # Number of genes n_EUR <- 600  n_AFR <- 40    # Expression matrices for EUR and AFR ancestries X <- matrix(rnorm(n_EUR * p), nrow = n_EUR, ncol = p) Y <- matrix(rnorm(n_AFR * p), nrow = n_AFR, ncol = p) colnames(X) <- colnames(Y) <- paste0(\"Gene_\", seq_len(p))  # Metadata for EUR and AFR ancestries # EUR: overrepresented compared to AFR MX <- data.frame(   condition = factor(c(rep(\"H\", 400), rep(\"D\", 200))),   ancestry = \"EUR\" )  # AFR: underrepresented compared to EUR MY <- data.frame(   condition = factor(c(rep(\"H\", 10), rep(\"D\", 30))),   ancestry = \"AFR\" )  # Visualize sample size imbalance meta <- rbind(MX, MY)  # Plot ggplot(meta, aes(x = ancestry, fill = condition)) +   geom_bar(position = \"dodge\", color = \"black\") +   labs(     title = \"Condition Imbalance Across Ancestries\",     x = \"Ancestry\",     y = \"Sample Count\",     fill = \"Condition\"   )"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/articles/single_subset_run.html","id":"stratification-step","dir":"Articles","previous_headings":"","what":"Stratification step","title":"Single subset run","text":"next step create stratified subset account sample size also control condition imbalance underrepresented ancestry (AFR).  output contain train, test inference sets additional information used strata. subset (train, test, inference) contains gene expression matrix ($X) metadata frame ($M).","code":"# Define column to stratify stratify_cols <- c(\"condition\")  # Split the data into stratified sets split <- split_stratified_ancestry_sets(   X = X,   Y = Y,   MX = MX,   MY = MY,   stratify_cols = stratify_cols,   seed = 42 )  # Visulaize stratified sets plot_stratified_sets(   x = split,   stratify_cols = stratify_cols ) # Output str(split) #> List of 4 #>  $ train      :List of 3 #>   ..$ X  : num [1:560, 1:100] 1.371 -0.565 0.363 0.633 0.404 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : chr [1:100] \"Gene_1\" \"Gene_2\" \"Gene_3\" \"Gene_4\" ... #>   ..$ M  :'data.frame':  560 obs. of  2 variables: #>   .. ..$ condition: Factor w/ 2 levels \"D\",\"H\": 2 2 2 2 2 2 2 2 2 2 ... #>   .. ..$ ancestry : chr [1:560] \"EUR\" \"EUR\" \"EUR\" \"EUR\" ... #>   ..$ ids: chr [1:560] \"1\" \"2\" \"3\" \"4\" ... #>  $ test       :List of 3 #>   ..$ X  : num [1:40, 1:100] 1.215 -1.097 1.113 -0.8 0.446 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : chr [1:100] \"Gene_1\" \"Gene_2\" \"Gene_3\" \"Gene_4\" ... #>   ..$ M  :'data.frame':  40 obs. of  2 variables: #>   .. ..$ condition: Factor w/ 2 levels \"D\",\"H\": 2 2 2 2 2 2 2 2 2 2 ... #>   .. ..$ ancestry : chr [1:40] \"EUR\" \"EUR\" \"EUR\" \"EUR\" ... #>   ..$ ids: chr [1:40] \"24\" \"136\" \"146\" \"158\" ... #>  $ inference  :List of 3 #>   ..$ X  : num [1:40, 1:100] 0.389 0.442 -0.533 -0.781 -0.124 ... #>   .. ..- attr(*, \"dimnames\")=List of 2 #>   .. .. ..$ : NULL #>   .. .. ..$ : chr [1:100] \"Gene_1\" \"Gene_2\" \"Gene_3\" \"Gene_4\" ... #>   ..$ M  :'data.frame':  40 obs. of  2 variables: #>   .. ..$ condition: Factor w/ 2 levels \"D\",\"H\": 2 2 2 2 2 2 2 2 2 2 ... #>   .. ..$ ancestry : chr [1:40] \"AFR\" \"AFR\" \"AFR\" \"AFR\" ... #>   ..$ ids: chr [1:40] \"1\" \"2\" \"3\" \"4\" ... #>  $ strata_info:List of 3 #>   ..$ usable      : chr [1:2] \"D\" \"H\" #>   ..$ missing     : chr(0)  #>   ..$ insufficient: chr(0)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/articles/single_subset_run.html","id":"permutation-interaction-analysis","dir":"Articles","previous_headings":"","what":"Permutation interaction analysis","title":"Single subset run","text":"Next, use test inference sets evaluate interaction effects condition ancestry using permutation-based inference. perm_diff_interaction() function estimates differential interactions groups using bootstrapping permtuation.","code":"# Define the ancestry column and the condition column g_col <- \"condition\" a_col <- \"ancestry\"  # Define the number of permutations B <- 1000  result <- perm_diff_interaction(   X = split$test$X,   Y = split$inference$X,   MX = split$test$M,   MY = split$inference$M,   g_col = g_col,   a_col = a_col,   permute = TRUE,   # Perform permutation   B = B,            # Number of iterations (shared for both bootstrapping and permutation)   seed = 42,   check_convergence = TRUE )"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/articles/single_subset_run.html","id":"output","dir":"Articles","previous_headings":"","what":"Output","title":"Single subset run","text":"summary_stats interaction results, including p-values adjusted p-values gene listed. function uses bootstrapping estimate confidence intervals SE interaction permutation calculate p-values. uses B bootstrapping permutation, set 1000 example. information statistics can found result object. actual number B used can found result$B_used_boot result$B_used_perm, respectively. actual values test statistics can found result$T_boot result$T_perm, respectively. distribution test statistics can visualized using plot_T_distribution function. plot shows distribution bootstrapped test statistics selected genes, dashed lines observed values dotted lines 95% confidence intervals.  set permute = TRUE, distribution permuted test statistics can visualized using plot_T_distribution function. plot displays empirical null distribution permutations. dashed line indicates observed statistic. Facet titles include empirical two-sided p-values.","code":"head(result$summary_stats, 10) #>    feature      T_obs        SE   CI_lower  CI_upper p_value     p_adj #> 1   Gene_1 -0.5130443 0.3923301 -1.2508662 0.2547914   0.240 0.8372549 #> 2   Gene_2 -0.6683108 0.4125705 -1.4404276 0.1595252   0.149 0.8372549 #> 3   Gene_3 -0.3320232 0.4179015 -1.0994486 0.4564010   0.427 0.8372549 #> 4   Gene_4  0.5558679 0.4792829 -0.3525281 1.5073401   0.275 0.8372549 #> 5   Gene_5 -0.5341650 0.5344263 -1.5502086 0.5675294   0.360 0.8372549 #> 6   Gene_6 -0.5112056 0.5125146 -1.4641899 0.4902113   0.359 0.8372549 #> 7   Gene_7  0.8474367 0.5291091 -0.2190532 1.8482184   0.122 0.8372549 #> 8   Gene_8  0.4034361 0.4632553 -0.4437222 1.4065911   0.413 0.8372549 #> 9   Gene_9 -0.7058754 0.5079581 -1.6996518 0.2799340   0.204 0.8372549 #> 10 Gene_10  0.6851216 0.5181549 -0.3723373 1.6788730   0.193 0.8372549 result$B_used_boot #> [1] 1000 result$B_used_perm #> [1] 1000 plot_T_distribution(   x = result,    statistic = \"T_boot\",   title = \"Bootstrapped distribution with 95% confidence intervals\" ) plot_T_distribution(   x = result,    statistic = \"T_perm\",   title = \"Permuted distribution with two-sided p-values\" )"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Katzlberger. Author, maintainer.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Katzlberger D (2025). CrossAncestryGenPhen: Permutation-Based Interaction Testing Across Ancestries. R package version 0.1.0, https://DKatzlberger.github.io/CrossAncestryGenPhen.","code":"@Manual{,   title = {CrossAncestryGenPhen: Permutation-Based Interaction Testing Across Ancestries},   author = {Daniel Katzlberger},   year = {2025},   note = {R package version 0.1.0},   url = {https://DKatzlberger.github.io/CrossAncestryGenPhen}, }"},{"path":[]},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/index.html","id":"package-installation","dir":"","previous_headings":"","what":"ðŸ“¦ Installation","title":"CrossAncestryGenPhen","text":"Install development version GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"DKatzlberger/CrossAncestryGenPhen\")"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/apply_mask.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply Row Mask to Expression and Metadata â€” apply_mask","title":"Apply Row Mask to Expression and Metadata â€” apply_mask","text":"Subsets expression matrix metadata using row mask.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/apply_mask.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply Row Mask to Expression and Metadata â€” apply_mask","text":"","code":"apply_mask(X, M, mask)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/apply_mask.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply Row Mask to Expression and Metadata â€” apply_mask","text":"X numeric matrix (samples x features). M data.frame metadata (samples x variables). mask logical integer vector rows keep.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/apply_mask.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply Row Mask to Expression and Metadata â€” apply_mask","text":"list `X` `M` subsets.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/bootstrap_T_obs.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal: Bootstrap Interaction Statistic (Adaptive or Fixed) â€” bootstrap_T_obs","title":"Internal: Bootstrap Interaction Statistic (Adaptive or Fixed) â€” bootstrap_T_obs","text":"Computes bootstrapped standard errors 95 observed interaction statistics using nonparametric sampling within ancestries.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/bootstrap_T_obs.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal: Bootstrap Interaction Statistic (Adaptive or Fixed) â€” bootstrap_T_obs","text":"","code":"bootstrap_T_obs(   X,   Y,   MX,   MY,   g_col,   a_col,   g1,   g2,   B = NULL,   seed = NULL,   min_iter = 500,   max_iter = 10000,   tol = 0.001,   batch_size = 100,   check_convergence = TRUE )"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/check_strata_feasibility.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Stratification Feasibility â€” check_strata_feasibility","title":"Check Stratification Feasibility â€” check_strata_feasibility","text":"Identifies usable, missing, insufficient strata based availability group.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/check_strata_feasibility.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Stratification Feasibility â€” check_strata_feasibility","text":"","code":"check_strata_feasibility(strata_X, strata_Y)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/check_strata_feasibility.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Stratification Feasibility â€” check_strata_feasibility","text":"strata_X factor overrepresented group strata (e.g., EUR). strata_Y factor underrepresented group strata (e.g., AFR).","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/check_strata_feasibility.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Stratification Feasibility â€” check_strata_feasibility","text":"list `usable`, `missing`, `insufficient` strata names.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_T_stat.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Test Statistic for Permutation â€” compute_T_stat","title":"Compute Test Statistic for Permutation â€” compute_T_stat","text":"Computes interaction effect: difference group-level differences. Returns NA vector subgroup empty.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_T_stat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Test Statistic for Permutation â€” compute_T_stat","text":"","code":"compute_T_stat(XY, g_XY, p1, p2, g1, g2)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_T_stat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Test Statistic for Permutation â€” compute_T_stat","text":"XY matrix features. g_XY factor group labels corresponding rows `XY`. p1 Indices first permutation group. p2 Indices second permutation group. g1 First group label. g2 Second group label.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_T_stat.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Test Statistic for Permutation â€” compute_T_stat","text":"numeric vector test statistics NA values.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_correlation_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Correlation Matrix from Long-format Data â€” compute_correlation_matrix","title":"Compute Correlation Matrix from Long-format Data â€” compute_correlation_matrix","text":"Transforms long-format data wide format computes correlation matrix across iterations.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_correlation_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Correlation Matrix from Long-format Data â€” compute_correlation_matrix","text":"","code":"compute_correlation_matrix(x, value_col, method = \"pearson\")"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_correlation_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Correlation Matrix from Long-format Data â€” compute_correlation_matrix","text":"x data frame data.table columns `feature`, `iteration`, value column. value_col name column pivot (e.g., \"p_value\" \"T_obs\"). method Correlation method: one \"pearson\", \"spearman\", \"kendall\".","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_correlation_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Correlation Matrix from Long-format Data â€” compute_correlation_matrix","text":"correlation matrix NA diagonal.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_empirical_pvalues.html","id":null,"dir":"Reference","previous_headings":"","what":"Empirical P-Values â€” compute_empirical_pvalues","title":"Empirical P-Values â€” compute_empirical_pvalues","text":"Computes two-sided empirical p-values.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_empirical_pvalues.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Empirical P-Values â€” compute_empirical_pvalues","text":"","code":"compute_empirical_pvalues(T_boot, T_obs)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_empirical_pvalues.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Empirical P-Values â€” compute_empirical_pvalues","text":"T_boot matrix bootstrapped test statistics. T_obs numeric vector observed test statistics.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_empirical_pvalues.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Empirical P-Values â€” compute_empirical_pvalues","text":"numeric vector p-values.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_jaccard_matrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Compute Jaccard Similarity Matrix Between Iterations â€” compute_jaccard_matrix","title":"Compute Jaccard Similarity Matrix Between Iterations â€” compute_jaccard_matrix","text":"Calculates pairwise Jaccard indices iterations based sample usage. Useful assessing overlap dependence train/test/inference sets across iterations.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_jaccard_matrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Compute Jaccard Similarity Matrix Between Iterations â€” compute_jaccard_matrix","text":"","code":"compute_jaccard_matrix(id_usage, role)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_jaccard_matrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Compute Jaccard Similarity Matrix Between Iterations â€” compute_jaccard_matrix","text":"id_usage data.frame columns ids, role, iteration, output track_sample_ids. role character string specifying sample role evaluate (\"test\", \"train\", \"inference\").","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_jaccard_matrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Compute Jaccard Similarity Matrix Between Iterations â€” compute_jaccard_matrix","text":"square matrix Jaccard indices dimensions iterations Ã— iterations.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_jaccard_matrix.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Compute Jaccard Similarity Matrix Between Iterations â€” compute_jaccard_matrix","text":"Jaccard index computed : $$J(, j) = |A_i âˆ© A_j| / |A_i âˆª A_j|$$ \\(A_i\\) \\(A_j\\) sets sample IDs used specified role iterations j.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/compute_jaccard_matrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Compute Jaccard Similarity Matrix Between Iterations â€” compute_jaccard_matrix","text":"","code":"# Assume `id_usage` is created using multiple splits and track_sample_ids() jaccard_test <- compute_jaccard_matrix(id_usage, role = \"test\") #> Error: object 'id_usage' not found jaccard_train <- compute_jaccard_matrix(id_usage, role = \"train\") #> Error: object 'id_usage' not found"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/get_strata.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Stratification Factor â€” get_strata","title":"Create Stratification Factor â€” get_strata","text":"Combines metadata columns factor stratified sampling.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/get_strata.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Stratification Factor â€” get_strata","text":"","code":"get_strata(M, stratify_cols)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/get_strata.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Stratification Factor â€” get_strata","text":"M data.frame containing metadata. stratify_cols character vector column names stratify .","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/get_strata.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Stratification Factor â€” get_strata","text":"factor indicating stratification strata.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/inject_DEG_signal.html","id":null,"dir":"Reference","previous_headings":"","what":"Inject Simulated DEGs and Interaction Effects into NB Counts â€” inject_DEG_signal","title":"Inject Simulated DEGs and Interaction Effects into NB Counts â€” inject_DEG_signal","text":"Takes output `simulate_NB_counts()` injects differential expression adjusting counts selected genes groups.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/inject_DEG_signal.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Inject Simulated DEGs and Interaction Effects into NB Counts â€” inject_DEG_signal","text":"","code":"inject_DEG_signal(   sim_data,   n_degs = 1000,   log2fc = 1.5,   prop_interaction = 0.3,   seed = NULL )"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/inject_DEG_signal.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Inject Simulated DEGs and Interaction Effects into NB Counts â€” inject_DEG_signal","text":"sim_data Output `simulate_NB_counts()`. n_degs Total number DEGs inject. log2fc Log2 fold change DEGs. prop_interaction Proportion DEGs interaction effects. seed Optional random seed.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/inject_DEG_signal.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Inject Simulated DEGs and Interaction Effects into NB Counts â€” inject_DEG_signal","text":"list updated counts, sample info, DEG metadata.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/mean_diff_by_group.html","id":null,"dir":"Reference","previous_headings":"","what":"Mean Difference Between Group Levels â€” mean_diff_by_group","title":"Mean Difference Between Group Levels â€” mean_diff_by_group","text":"Computes column mean difference two group levels.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/mean_diff_by_group.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mean Difference Between Group Levels â€” mean_diff_by_group","text":"","code":"mean_diff_by_group(data, group, g1, g2)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/mean_diff_by_group.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mean Difference Between Group Levels â€” mean_diff_by_group","text":"data matrix data frame numeric features. group factor indicating group membership row. g1 reference level. g2 comparison level.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/mean_diff_by_group.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mean Difference Between Group Levels â€” mean_diff_by_group","text":"numeric vector mean differences.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/perm_diff_interaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Permutation-Based Interaction Test with Mandatory Bootstrapped Inference â€” perm_diff_interaction","title":"Permutation-Based Interaction Test with Mandatory Bootstrapped Inference â€” perm_diff_interaction","text":"Performs permutation test (optional) interaction effects conditions across ancestries. Always estimates bootstrapped standard errors confidence intervals observed interaction effects via resampling within ancestries.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/perm_diff_interaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Permutation-Based Interaction Test with Mandatory Bootstrapped Inference â€” perm_diff_interaction","text":"","code":"perm_diff_interaction(   X,   Y,   MX,   MY,   g_col,   a_col,   seed = NULL,   B = 1000,   permute = TRUE,   min_iter = 500,   max_iter = 10000,   tol = 0.001,   batch_size = 100,   check_convergence = TRUE )"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/perm_diff_interaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Permutation-Based Interaction Test with Mandatory Bootstrapped Inference â€” perm_diff_interaction","text":"X numeric matrix expression values ancestry (rows = samples, columns = genes). Y numeric matrix expression values ancestry B (format X). MX data.frame metadata X, must include columns group ancestry. data.frame metadata Y, must include columns group ancestry. g_col Column name metadata indicating condition/group (factor 2 levels). a_col Column name metadata indicating ancestry (must unique per ancestry). seed Optional integer set random seed reproducibility. B Integer. Number permutations bootstraps perform. Set NULL adaptive convergence. permute Logical. Whether perform permutation-based interaction testing. min_iter Minimum number permutations/bootstraps run checking convergence. max_iter Maximum number permutations/bootstraps allowed. tol Tolerance threshold convergence (applies empirical p-values bootstrap SEs). batch_size Number permutations/bootstraps add per iteration. check_convergence Logical. Whether check convergence fixed-B mode (permute = TRUE).","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/perm_diff_interaction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Permutation-Based Interaction Test with Mandatory Bootstrapped Inference â€” perm_diff_interaction","text":"list : summary_stats data.frame gene-wise observed statistics (T_obs),                        bootstrapped standard errors (SE),                        95% confidence intervals (CI_lower, CI_upper),                        empirical p-values (p_value, NA permute = FALSE),                        Benjamini-Hochberg adjusted p-values (p_adj, NA permute = FALSE). T_perm Matrix permutation-based test statistics (NULL permute = FALSE). T_boot Matrix bootstrap-based observed statistics (rows = bootstraps, columns = genes). B_used_perm Number valid permutations used (NA permute = FALSE). B_used_boot Number valid bootstrap replicates used. converged_perm Logical indicating permutation p-values converged (NA permute = FALSE). converged_boot Logical indicating bootstrap SEs converged.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/perm_diff_interaction.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Permutation-Based Interaction Test with Mandatory Bootstrapped Inference â€” perm_diff_interaction","text":"Permutation testing can toggled using `permute` flag. `permute = FALSE`, bootstrapped confidence intervals standard errors provided, p-values returned NA. input expression matrices must samples rows genes columns.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/permute_indices.html","id":null,"dir":"Reference","previous_headings":"","what":"Random Permutation of Indices â€” permute_indices","title":"Random Permutation of Indices â€” permute_indices","text":"Returns random split indices two groups.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/permute_indices.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Random Permutation of Indices â€” permute_indices","text":"","code":"permute_indices(n_total, n1)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/permute_indices.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Random Permutation of Indices â€” permute_indices","text":"n_total Total number samples. n1 Size first group.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/permute_indices.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Random Permutation of Indices â€” permute_indices","text":"list two index vectors: `p1` `p2`.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_T_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot T-Statistic Distributions with Observed Values and Annotations â€” plot_T_distribution","title":"Plot T-Statistic Distributions with Observed Values and Annotations â€” plot_T_distribution","text":"function visualizes empirical null distributions T-statistics selected features (e.g., genes) using either permutation- bootstrap-based inference. overlays observed T-statistics dashed lines, bootstrapping used, adds 95 inference, empirical p-values shown facet titles.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_T_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot T-Statistic Distributions with Observed Values and Annotations â€” plot_T_distribution","text":"","code":"plot_T_distribution(   x,   features = NULL,   statistic = c(\"T_perm\", \"T_boot\"),   title = NULL,   point_size = 0.5 )"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_T_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot T-Statistic Distributions with Observed Values and Annotations â€” plot_T_distribution","text":"x named list output perm_diff_interaction() similar, containing null distributions summary statistics. Must include summary_stats data frame either T_perm T_boot depending statistic type. features Character vector feature names plot. NULL, first 9 features (columns) selected null matrix used. statistic Character string indicating null distribution plot. Must either \"T_perm\" (permutation) \"T_boot\" (bootstrap). title Optional title entire plot. point_size Numeric value control relative font point size (actively used version).","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_T_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot T-Statistic Distributions with Observed Values and Annotations â€” plot_T_distribution","text":"ggplot object consisting histograms test statistics per feature, vertical         lines showing observed values either p-values (permutations) confidence intervals         (bootstraps).","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_T_distribution.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot T-Statistic Distributions with Observed Values and Annotations â€” plot_T_distribution","text":"function automatically creates facet plots feature selected. statistic = \"T_perm\", observed test statistic plotted dashed blue line, empirical p-value included facet label. statistic = \"T_boot\", observed value plotted dashed blue line 95 required null distribution missing input object, function throw informative error.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_correlation_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"ComplexHeatmap of Correlation Matrix Across Iterations â€” plot_correlation_heatmap","title":"ComplexHeatmap of Correlation Matrix Across Iterations â€” plot_correlation_heatmap","text":"Computes correlation values (e.g., p-values, t-statistics) across iterations per feature, reshapes data wide format, calculates correlation matrix, visualizes clustered heatmap.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_correlation_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"ComplexHeatmap of Correlation Matrix Across Iterations â€” plot_correlation_heatmap","text":"","code":"plot_correlation_heatmap(   x,   value_col,   method = \"pearson\",   row_names = NULL,   title = NULL,   file = NULL,   width = 8,   height = 8 )"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_correlation_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"ComplexHeatmap of Correlation Matrix Across Iterations â€” plot_correlation_heatmap","text":"x data frame columns: `feature`, `iteration`, numeric value column (e.g., `p_value`, `T_obs`). value_col string specifying column name `x` use correlation (e.g., `\"p_value\"` `\"T_obs\"`). method string specifying correlation method use. One `\"pearson\"` (default), `\"spearman\"`, `\"kendall\"`. row_names Optional string display row title heatmap. title Optional string main heatmap title. file Optional file path save plot (e.g., `\"plot.pdf\"` `\"plot.png\"`). `NULL`, plot shown interactively. width Width plot inches (default = 8). height Height plot inches (default = 8).","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_correlation_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"ComplexHeatmap of Correlation Matrix Across Iterations â€” plot_correlation_heatmap","text":"Invisibly returns `NULL`. function called side effect drawing saving heatmap.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_correlation_heatmap.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"ComplexHeatmap of Correlation Matrix Across Iterations â€” plot_correlation_heatmap","text":"function useful visualizing stability similarity given statistic (like p-values test statistics) across multiple iterations resampling runs. internally uses `compute_correlation_matrix()` compute correlation matrix. upper triangle matrix used calculate summary mean correlation, displayed heatmap.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_jaccard_heatmap.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Jaccard Heatmap of Sample Reuse Across Iterations â€” plot_jaccard_heatmap","title":"Plot Jaccard Heatmap of Sample Reuse Across Iterations â€” plot_jaccard_heatmap","text":"Computes visualizes Jaccard similarity sample usage across iterations given role (e.g., \"test\", \"train\", \"inference\").","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_jaccard_heatmap.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Jaccard Heatmap of Sample Reuse Across Iterations â€” plot_jaccard_heatmap","text":"","code":"plot_jaccard_heatmap(   id_usage,   role = \"test\",   row_names = NULL,   title = NULL,   file = NULL,   width = 8,   height = 8 )"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_jaccard_heatmap.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Jaccard Heatmap of Sample Reuse Across Iterations â€” plot_jaccard_heatmap","text":"id_usage data.frame columns sample_id, role, iteration. role string, one \"test\", \"train\", \"inference\". title Optional title heatmap. file Optional filename save heatmap (pdf, png, jpeg, tiff). width, height Width height saved file (inches).","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_jaccard_heatmap.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Jaccard Heatmap of Sample Reuse Across Iterations â€” plot_jaccard_heatmap","text":"Invisibly returns Jaccard matrix (numeric matrix).","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_pvalue_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot P-value Distribution Colored by Continuous Mean log2FC (Diverging) â€” plot_pvalue_distribution","title":"Plot P-value Distribution Colored by Continuous Mean log2FC (Diverging) â€” plot_pvalue_distribution","text":"Shows empirical p-value distributions across repeated permutation iterations. Bars filled using diverging color scale: blue (low logFC), white (0), red (high logFC).","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_pvalue_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot P-value Distribution Colored by Continuous Mean log2FC (Diverging) â€” plot_pvalue_distribution","text":"","code":"plot_pvalue_distribution(x, features, threshold = NULL, point_size = 0.5)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_pvalue_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot P-value Distribution Colored by Continuous Mean log2FC (Diverging) â€” plot_pvalue_distribution","text":"x Output `repeated_perm_diff_interaction()`. features Character vector gene names include. threshold Optional numeric. Adds vertical dashed line p-value threshold. Use e.g., 0.05 significance threshold, set NULL skip (default = NULL). point_size Numeric. Controls base font size (default = 0.5).","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_pvalue_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot P-value Distribution Colored by Continuous Mean log2FC (Diverging) â€” plot_pvalue_distribution","text":"ggplot2 object.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_significance_landscape.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Interaction Significance Landscape â€” plot_significance_landscape","title":"Plot Interaction Significance Landscape â€” plot_significance_landscape","text":"Creates scatter plot summarizing reproducibility statistical significance interaction effects across multiple stratified resampling iterations.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_significance_landscape.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Interaction Significance Landscape â€” plot_significance_landscape","text":"","code":"plot_significance_landscape(   x,   x_var,   y_var,   color_var = NULL,   label_var = NULL,   label_threshold = NULL,   point_size = 0.5 )"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_significance_landscape.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Interaction Significance Landscape â€” plot_significance_landscape","text":"x data frame (e.g., `repeated_perm_diff_interaction()`) containing least feature, effect size, variability, p-value columns. x_var Name column use x-axis. Default: \"mean_T_obs\" y_var Name column use y-axis. plotted -log10(y). Default: \"median_p\" color_var Name column map color. Default: \"prob_signif\" label_var Name column used labeling points. Default: \"feature\" label_threshold Optional numeric. provided, labels features `color_var >= threshold`. NULL (default), labels shown. point_size Numeric value control base font size. Default: 0.5","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_significance_landscape.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Interaction Significance Landscape â€” plot_significance_landscape","text":"ggplot2 object.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_simulated_features.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Simulated Features by Ancestry and Group (base R + data.table) â€” plot_simulated_features","title":"Plot Simulated Features by Ancestry and Group (base R + data.table) â€” plot_simulated_features","text":"Visualize expression selected genes simulated data, grouped ancestry filled group.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_simulated_features.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Simulated Features by Ancestry and Group (base R + data.table) â€” plot_simulated_features","text":"","code":"plot_simulated_features(   sim_data,   features = NULL,   a_col = \"ancestry\",   g_col = \"group\",   zscore = TRUE,   n = 12,   seed = NULL )"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_simulated_features.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Simulated Features by Ancestry and Group (base R + data.table) â€” plot_simulated_features","text":"sim_data Output `simulate_DEG_signal()` `simulate_NB_counts()`. features Optional character vector gene names plot. NULL, samples `n` genes. a_col Column `sample_info` used x-axis grouping (e.g., \"ancestry\"). g_col Column `sample_info` used fill color (e.g., \"group\"). zscore Logical. TRUE, z-score normalize gene across samples. n Number genes sample `features` NULL. seed Optional random seed.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_simulated_features.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Simulated Features by Ancestry and Group (base R + data.table) â€” plot_simulated_features","text":"ggplot2 object showing boxplots selected features.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_stratified_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Sample Size by Stratified Variable and Dataset Split â€” plot_stratified_sets","title":"Plot Sample Size by Stratified Variable and Dataset Split â€” plot_stratified_sets","text":"Visualizes number samples train, test, inference sets, bars grouped dataset split filled stratum values. stratification column gets facet clearer interpretation.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_stratified_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Sample Size by Stratified Variable and Dataset Split â€” plot_stratified_sets","text":"","code":"plot_stratified_sets(x, stratify_cols, title = NULL, point_size = 0.5)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_stratified_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Sample Size by Stratified Variable and Dataset Split â€” plot_stratified_sets","text":"stratify_cols Character vector metadata column names used stratification. point_size Numeric value control fontsize. result output `split_stratified_ancestry_sets()`.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/plot_stratified_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Sample Size by Stratified Variable and Dataset Split â€” plot_stratified_sets","text":"ggplot2 object dodged bars grouped set, filled strata values, faceted stratify column.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/repeated_perm_diff_interaction.html","id":null,"dir":"Reference","previous_headings":"","what":"Repeated Permutation Interaction Test on Stratified Subsets â€” repeated_perm_diff_interaction","title":"Repeated Permutation Interaction Test on Stratified Subsets â€” repeated_perm_diff_interaction","text":"Performs multiple stratified subsamples overrepresented group, runs `perm_diff_interaction()` , aggregates results.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/repeated_perm_diff_interaction.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Repeated Permutation Interaction Test on Stratified Subsets â€” repeated_perm_diff_interaction","text":"","code":"repeated_perm_diff_interaction(   X,   Y,   MX,   MY,   stratify_cols,   g_col,   a_col,   features = NULL,   n_iter = 50,   B = 100,   seed = 42 )"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/repeated_perm_diff_interaction.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Repeated Permutation Interaction Test on Stratified Subsets â€” repeated_perm_diff_interaction","text":"X Expression matrix (samples Ã— genes) overrepresented ancestry. Y Expression matrix underrepresented ancestry. MX Metadata X. Metadata Y. stratify_cols Character vector metadata column names stratify . g_col Name grouping variable (e.g., \"condition\"). a_col Name ancestry variable. features Optional vector feature names include (default: ). n_iter Number stratified subsample iterations. B Number permutations `perm_diff_interaction()` call. seed Base random seed reproducibility.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/repeated_perm_diff_interaction.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Repeated Permutation Interaction Test on Stratified Subsets â€” repeated_perm_diff_interaction","text":"list : aggregated Data frame per-feature summary across iterations. all_iterations Combined data frame summary_stats results. metadata Info run parameters.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/simulate_NB_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Negative Binomial RNA-seq Counts from Real Data â€” simulate_NB_counts","title":"Simulate Negative Binomial RNA-seq Counts from Real Data â€” simulate_NB_counts","text":"Simulates RNA-seq count data using Negative Binomial model, parameters estimated real count data. Useful creating realistic baseline data method development DEG simulation.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/simulate_NB_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Negative Binomial RNA-seq Counts from Real Data â€” simulate_NB_counts","text":"","code":"simulate_NB_counts(X, MX, g_col, a_col, seed = NULL)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/simulate_NB_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Negative Binomial RNA-seq Counts from Real Data â€” simulate_NB_counts","text":"X gene--sample matrix data frame real (integer) RNA-seq counts. MX data frame rownames matching X columns ancestry group. g_col name column MX indicating experimental group (e.g., \"group\"). a_col name column MX indicating ancestry (e.g., \"ancestry\"). seed Optional random seed reproducibility.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/simulate_NB_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Negative Binomial RNA-seq Counts from Real Data â€” simulate_NB_counts","text":"list containing: counts simulated count matrix shape X (samples Ã— genes). sample_info Metadata ancestry, group, interaction group. params data frame per-gene estimated means dispersions.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/split_stratified_ancestry_sets.html","id":null,"dir":"Reference","previous_headings":"","what":"Split Expression and Metadata into Train, Test, and Inference Sets â€” split_stratified_ancestry_sets","title":"Split Expression and Metadata into Train, Test, and Inference Sets â€” split_stratified_ancestry_sets","text":"Subsamples overrepresented ancestry (e.g., EUR) match underrepresented ancestry (e.g., AFR) test set, stratifying metadata columns. remaining overrepresented samples used training. underrepresented ancestry group returned inference set.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/split_stratified_ancestry_sets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Split Expression and Metadata into Train, Test, and Inference Sets â€” split_stratified_ancestry_sets","text":"","code":"split_stratified_ancestry_sets(   X,   Y,   MX,   MY,   id_col = NULL,   stratify_cols = NULL,   seed = NULL )"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/split_stratified_ancestry_sets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Split Expression and Metadata into Train, Test, and Inference Sets â€” split_stratified_ancestry_sets","text":"X numeric matrix (samples Ã— features) overrepresented ancestry group. Y numeric matrix (samples Ã— features) underrepresented ancestry group. MX data.frame metadata X (number rows X). data.frame metadata Y (number rows Y). id_col Optional string specifying column name metadata holds sample IDs. NULL, rownames used. stratify_cols character vector metadata column names stratify . seed Optional integer set random seed reproducibility.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/split_stratified_ancestry_sets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Split Expression and Metadata into Train, Test, and Inference Sets â€” split_stratified_ancestry_sets","text":"named list : train List `X`, `M`, `ids` remaining overrepresented samples. test List `X`, `M`, `ids` subsampled overrepresented group. inference List `X`, `M`, `ids` underrepresented ancestry group. strata_info summary list usable, missing, insufficient strata.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/split_stratified_ancestry_sets.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Split Expression and Metadata into Train, Test, and Inference Sets â€” split_stratified_ancestry_sets","text":"version supports tracking subsetting using either rownames specified sample ID column.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/stratified_sample_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Stratified Sampling by Sample IDs â€” stratified_sample_ids","title":"Stratified Sampling by Sample IDs â€” stratified_sample_ids","text":"Performs stratified sampling vector sample IDs grouped strata.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/stratified_sample_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Stratified Sampling by Sample IDs â€” stratified_sample_ids","text":"","code":"stratified_sample_ids(strata, target_counts, ids)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/stratified_sample_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Stratified Sampling by Sample IDs â€” stratified_sample_ids","text":"strata factor indicating strata sample (must match `ids` length). target_counts named vector many samples draw per stratum. ids character numeric vector sample IDs, length `strata`.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/stratified_sample_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Stratified Sampling by Sample IDs â€” stratified_sample_ids","text":"character numeric vector sampled IDs.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/track_sample_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Track Sample Roles and IDs from a Split â€” track_sample_ids","title":"Track Sample Roles and IDs from a Split â€” track_sample_ids","text":"Extracts sample IDs split object labels roles (test, train, inference), associating sample assigned role given iteration.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/track_sample_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Track Sample Roles and IDs from a Split â€” track_sample_ids","text":"","code":"track_sample_ids(split, iteration)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/track_sample_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Track Sample Roles and IDs from a Split â€” track_sample_ids","text":"split split object returned split_stratified_ancestry_sets(). iteration integer iteration number annotate split .","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/track_sample_ids.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Track Sample Roles and IDs from a Split â€” track_sample_ids","text":"data.frame columns: ids, role, iteration.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/validate_ancestry.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Ancestry Constraints â€” validate_ancestry","title":"Validate Ancestry Constraints â€” validate_ancestry","text":"Ensures dataset exactly one ancestry level.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/validate_ancestry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Ancestry Constraints â€” validate_ancestry","text":"","code":"validate_ancestry(a_X, a_Y)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/validate_ancestry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Ancestry Constraints â€” validate_ancestry","text":"a_X ancestry label dataset X. a_Y ancestry label dataset Y.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/validate_groups.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate Group Factors â€” validate_groups","title":"Validate Group Factors â€” validate_groups","text":"Ensures group labels factors, share levels, exactly 2 levels.","code":""},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/validate_groups.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate Group Factors â€” validate_groups","text":"","code":"validate_groups(g_X, g_Y)"},{"path":"https://DKatzlberger.github.io/CrossAncestryGenPhen/reference/validate_groups.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate Group Factors â€” validate_groups","text":"g_X factor vector representing group labels dataset X. g_Y factor vector representing group labels dataset Y.","code":""}]
